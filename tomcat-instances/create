#!/bin/bash

[[ 0 -ne $EUID ]] && echo "root access required" && exit 1

findFreePort (){
   port=${1:-1}
   free=0
   while [ 0 -eq $free ]; do
      nc -z localhost $port && free=0 || free=1
      port=$(($port+1))
   done
   echo $port
}

name="${1:-instance}"
pushd "$(dirname $0)" > /dev/null

# -- Step 1 : copy instance from template

[ ! -e "$name" ] \
   || echo "instance $name already exists" || return 1

[ -e _template/tomcat ] \
   || echo "template not found, please run _template/create first" || return 1

instance="tomcat-${name}"
rm -rf "$instance"
cp -r _template/tomcat "$instance"
chmod ugo+x "$instance"/**/*.sh

echo "instance path : $(pwd)/$instance"

# -- Step 2 : configure instance --

# find open port(s)
httpPort=$(findFreePort 8080)
stopPort=$(findFreePort 8005)

echo "instance ports : stop=$stopPort http=$httpPort"

# reconfigure instance ports
sed \
   -e "s/port=\"8005\"/port=\"$stopPort\"/g" \
   -e "s/port=\"8080\"/port=\"$httpPort\"/g" \
   -i "$instance/conf/server.xml"

# add start script into /etc/init.d/
startupScript="/etc/init.d/${instance}"
cat ./service | sed \
   -e 's+#INSTANCE_PATH#+'$(pwd)/$instance'+' \
   -e 's+#INSTANCE_NAME#+'$instance'+' \
   > $startupScript
chmod ugo+x $startupScript

# configure automatic startup
update-rc.d -f "$instance" remove >/dev/null
update-rc.d "$instance" defaults >/dev/null

echo "service & startup config added : $startupScript"

# TODO add reverse proxy rule

# 
popd > /dev/null
