#!/bin/bash

[[ 0 -ne $EUID ]] && echo "root access required" && exit 1

# TODO : search into existing instances ports (not only available, since they may not be started


findFreePort (){
   port=${1:-1}
   free=0
   while [ 0 -eq $free ]; do
      nc -z localhost $port && free=0 || free=1
      port=$(($port+1))
   done
   echo $port
}

findJavaHome (){
   # TODO : fallback on jre when jdk is not available
   defaultJava=$(readlink -e $(which javac))
   defaultJava="${defaultJava%/bin/javac}"
   javaHome="${JAVA_HOME:-$defaultJava}"
   echo $javaHome
}

# parameters
name="${1:-instance}"     # instance name
instanceRoot="${2:-$(dirname $0)}" # where to create instance

instance="tomcat-$name"          # instance folder name
folder="$instanceRoot/$instance" # instance folder path

# -- Step 1 : copy instance from template

[ ! -e "$folder" ] \
   || echo "target folder already exists : $folder" || return 1

[ -e _template/tomcat ] \
   || echo "template not found, please run _template/create first" || return 1

rm -rf "$folder"
cp -r _template/tomcat "$folder"
chmod ugo+x "$folder"/**/*.sh

echo "instance path : $folder"

# -- Step 2 : configure instance --

# find open port(s)
httpPort=$(findFreePort 8080)
stopPort=$(findFreePort 8005)

echo "instance ports : stop=$stopPort http=$httpPort"

# reconfigure instance ports
sed \
   -e "s/port=\"8005\"/port=\"$stopPort\"/g" \
   -e "s/port=\"8080\"/port=\"$httpPort\"/g" \
   -i "$folder/conf/server.xml"

javaHome="$(findJavaHome)"

echo "java home : $javaHome"

# TODO : stop existing instance (if any)

# add start script into /etc/init.d/
startupScript="/etc/init.d/${instance}"
cat ./service | sed \
   -e 's+#INSTANCE_PATH#+'$folder'+' \
   -e 's+#INSTANCE_NAME#+'$instance'+' \
   -e 's+#JAVA_HOME#+'$javaHome'+' \
   > $startupScript
chmod ugo+x $startupScript

# configure automatic startup
update-rc.d -f "$instance" remove >/dev/null
update-rc.d "$instance" defaults >/dev/null

echo "service & startup config added : $startupScript"

# TODO : allow to have a non-root context

echo -e "
   <Location /$name/>
      ProxyPass        http://localhost:$httpPort/
      ProxyPassReverse http://localhost:$httpPort/
   </Location>
   " > $folder/apache-proxy.conf

echo -e "
make sure that your apache configuration includes link to proxy configuration :

IncludeOptional $instanceRoot/tomcat-*/apache-proxy.conf
"
service $instance start

apachectl graceful

